version: '3.9'

services:
  postgres:
    image: postgres:15
    container_name: dcq-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-dcq_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dcq_pass}
      POSTGRES_DB: ${POSTGRES_DB:-dcq_db}
    volumes:
      - dcq_postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-dcq_user} -d ${POSTGRES_DB:-dcq_db}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: dcq-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # API service commented out to allow running it locally during development
  # Uncomment for production deployment
  api:
    build: .
    container_name: dcq-api
    restart: always
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    volumes:
      - .:/app
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-dcq_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dcq_pass}
      - POSTGRES_DB=${POSTGRES_DB:-dcq_db}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - DATABASE_URL=postgresql://${POSTGRES_USER:-dcq_user}:${POSTGRES_PASSWORD:-dcq_pass}@postgres:5432/${POSTGRES_DB:-dcq_db}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://redis:6379/0
      
  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=http://localhost:8000
    container_name: dcq-frontend
    restart: always
    ports:
      - "80:80"
    depends_on:
      - api

  # Celery services are now in docker-compose.celery.yml
  # Uncomment if you want to run them within this compose file
  
  # # Worker for email tasks
  # celery_worker_emails:
  #   build: .
  #   container_name: dcq-worker-emails
  #   restart: always
  #   command: celery -A app.core.celery_app.celery_app worker -Q emails -n worker.emails@%h --loglevel=info
  #   volumes:
  #     - .:/app
  #     - ./logs:/app/logs
  #   depends_on:
  #     - redis
  #     - postgres
  #   environment:
  #     - POSTGRES_USER=${POSTGRES_USER:-dcq_user}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dcq_pass}
  #     - POSTGRES_DB=${POSTGRES_DB:-dcq_db}
  #     - POSTGRES_HOST=postgres
  #     - POSTGRES_PORT=5432
  #     - DATABASE_URL=postgresql://${POSTGRES_USER:-dcq_user}:${POSTGRES_PASSWORD:-dcq_pass}@postgres:5432/${POSTGRES_DB:-dcq_db}
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #     - REDIS_URL=redis://redis:6379/0

  # # Worker for content processing tasks
  # celery_worker_content:
  #   build: .
  #   container_name: dcq-worker-content
  #   restart: always
  #   command: celery -A app.core.celery_app.celery_app worker -Q content -n worker.content@%h --loglevel=info
  #   volumes:
  #     - .:/app
  #     - ./logs:/app/logs
  #   depends_on:
  #     - redis
  #     - postgres
  #   environment:
  #     - POSTGRES_USER=${POSTGRES_USER:-dcq_user}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dcq_pass}
  #     - POSTGRES_DB=${POSTGRES_DB:-dcq_db}
  #     - POSTGRES_HOST=postgres
  #     - POSTGRES_PORT=5432
  #     - DATABASE_URL=postgresql://${POSTGRES_USER:-dcq_user}:${POSTGRES_PASSWORD:-dcq_pass}@postgres:5432/${POSTGRES_DB:-dcq_db}
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #     - REDIS_URL=redis://redis:6379/0

  # # Default worker for maintenance and other tasks
  # celery_worker_default:
  #   build: .
  #   container_name: dcq-worker-default
  #   restart: always
  #   command: celery -A app.core.celery_app.celery_app worker -Q default -n worker.default@%h --loglevel=info
  #   volumes:
  #     - .:/app
  #     - ./logs:/app/logs
  #   depends_on:
  #     - redis
  #     - postgres
  #   environment:
  #     - POSTGRES_USER=${POSTGRES_USER:-dcq_user}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dcq_pass}
  #     - POSTGRES_DB=${POSTGRES_DB:-dcq_db}
  #     - POSTGRES_HOST=postgres
  #     - POSTGRES_PORT=5432
  #     - DATABASE_URL=postgresql://${POSTGRES_USER:-dcq_user}:${POSTGRES_PASSWORD:-dcq_pass}@postgres:5432/${POSTGRES_DB:-dcq_db}
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #     - REDIS_URL=redis://redis:6379/0

  # # Celery Beat for scheduled tasks
  # celery_beat:
  #   build: .
  #   container_name: dcq-beat
  #   restart: always
  #   command: celery -A app.core.celery_app.celery_app beat --loglevel=info
  #   volumes:
  #     - .:/app
  #     - ./logs:/app/logs
  #   depends_on:
  #     - redis
  #     - postgres
  #   environment:
  #     - POSTGRES_USER=${POSTGRES_USER:-dcq_user}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dcq_pass}
  #     - POSTGRES_DB=${POSTGRES_DB:-dcq_db}
  #     - POSTGRES_HOST=postgres
  #     - POSTGRES_PORT=5432
  #     - DATABASE_URL=postgresql://${POSTGRES_USER:-dcq_user}:${POSTGRES_PASSWORD:-dcq_pass}@postgres:5432/${POSTGRES_DB:-dcq_db}
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #     - REDIS_URL=redis://redis:6379/0

  # # Flower for monitoring Celery tasks
  # celery_flower:
  #   build: .
  #   container_name: dcq-flower
  #   restart: always
  #   command: celery -A app.core.celery_app.celery_app flower --port=5555
  #   ports:
  #     - "5555:5555"
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     - redis
  #     - celery_worker_default
  #     - celery_worker_emails
  #     - celery_worker_content
  #   environment:
  #     - POSTGRES_HOST=postgres
  #     - POSTGRES_PORT=5432
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #     - REDIS_URL=redis://redis:6379/0

volumes:
  dcq_postgres_data:
    name: dcq_postgres_data
    driver: local
  redis_data:
    name: dcq_redis_data
    driver: local
